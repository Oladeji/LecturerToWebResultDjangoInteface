"""
Django settings for NewHonlecturerProject project.

Generated by 'django-admin startproject' using Django 3.1.7.

For more information on this file, see
https://docs.djangoproject.com/en/3.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/3.1/ref/settings/

Error=> SessionStore' object has no attribute '_session_cache'
# To fix this you need to remove sessions from cache, e.g.

from django.contrib.sessions.models import Session
Session.objects.all().delete()
psycopg2-binary must be install 
pip install pycryptodome remove this
pip install pycryptodomex

# sudo apt-get update
# sudo apt-get install libpq-dev python3.8-dev
# pipenv install --python=3.9 psycopg2
admin.site.site_header ="PROPERTY MANAGER"
admin.site.site_title ="PROPERTY MANAGER ADMIN AREA" 
admin.site.index_title ="WELCOME TO PROPERTY MANAGER ADMIN"

jdcal==1.4.1
Jinja2==2.11.2
MarkupSafe==1.1.1
six==1.15.0
whitenoise==5.2.0

"""
import os
import json
from pathlib import Path
from django.contrib.messages import constants as messages
# Build paths inside the project like this: BASE_DIR / 'subdir'.
from django.core.wsgi import get_wsgi_application

#import urllib.parse as up
#import psycopg2
import environ

#application = get_wsgi_application()
env = environ.Env(
    # set casting, default value
    DEBUG=(bool, False)
)
# reading .env file
environ.Env.read_env()

# False if not in os.environ
DEBUG = env('DEBUG')
print(DEBUG)
print('DEBUG HAS BEEN PRINTED NOW......................')


BASE_DIR = Path(__file__).resolve().parent.parent

#with open('LecturerAppConfig.json') as fh :
    #config =json.load(fh)
# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/3.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
#SECRET_KEY = '49cp4$8uu23u1=81i@qil*ab18s$bw97x1!l&fb@h+v(583jtt'

# SECURITY WARNING: don't run with debug turned on in production!
# = True

#DEBUG = int(os.environ.get('DEBUG',default=1))
ALLOWED_HOSTS = ['192.168.8.154','192.168.8.111','127.0.0.1']
#ALLOWED_HOSTS = []
#ALLOWED_HOSTS = os.environ.get("DJANGO_ALLOWED_HOSTS").split(" ")
if DEBUG:
    
    EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'
    EMAIL_HOST ='smtp.gmail.com'# 'smtp.yourserver.com'
    EMAIL_PORT = '587'
    EMAIL_HOST_USER = env("EMAIL_HOST_USER")
    EMAIL_HOST_PASSWORD = env("EMAIL_HOST_PASSWORD")
    EMAIL_USE_TLS = True
    #EMAIL_USE_SSL = False
# Application definition

INSTALLED_APPS = [
    'whitenoise.runserver_nostatic',
    'GradeManagerapp.apps.GrademanagerappConfig',
    #'GradeManagerapp',
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    #'whitenoise.middleware.WhiteNoiseMiddleware',
]

ROOT_URLCONF = 'NewHonlecturerProject.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'NewHonlecturerProject.wsgi.application'


# Database
# https://docs.djangoproject.com/en/3.1/ref/settings/#databases
# print(env("DBNAME"))
# print(env("DBUSER"))
# print(env("DBHOST"))
# print(env("DBPASSWORD"))
# print(env("DBPORT"))

DATABASES = {
    'default': {
        #'ENGINE': 'django.db.backends.sqlite3',
        #'NAME': BASE_DIR / 'db.sqlite3',
        #  'ENGINE': 'django.db.backends.postgresql',
         'NAME':env("DBNAME"),
         'USER':env("DBUSER"),
         'PASSWORD': env("DBPASSWORD"),
         'HOST': env("DBHOST"),
         'PORT': env("DBPORT"),
         'ENGINE':'django.db.backends.postgresql',
         #'NAME':'HonLecturerDB',
         #'USER':'postgres',
         #'PASSWORD':'Ranti',
         #'HOST':'db',
         #'PORT':'5432',

    }
}


# Password validation
# https://docs.djangoproject.com/en/3.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/3.1/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_L10N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/3.1/howto/static-files/

STATIC_URL = '/static/'


print (BASE_DIR)
STATIC_ROOT = os.path.join(BASE_DIR, 'staticfiles')
STATIC_ROOT = '/code/static'
#STATICFILES_STORAGE = 'whitenoise.storage.CompressedManifestStaticFilesStorage'
# Extra places for collectstatic to find static files.
# STATICFILES_DIRS = (
#     os.path.join(BASE_DIR, 'static'),
# )

MESSAGE_TAGS = {
    messages.DEBUG:'alert-info',
    messages.INFO:'alert-info',
    messages.SUCCESS:'alert-success',
    messages.WARNING:'alert-warning',
    messages.ERROR:'alert-danger',

}
BASE_URL = env("BASE_URL")
CIPHER_PASS=env("CIPHER_PASS")
WORKSHEET_PASS =env("WORKSHEET_PASS")


WORKBOOKHASHED_PASSWORD=env("WORKBOOKHASHED_PASSWORD")
AUTHENTICATION_BACKENDS = ['GradeManagerapp.EmailBackend.EmailBackend']
LOGIN_REDIRECT_URL = '/'
LOGIN_URL='login_view'
#SECRET_KEY=config["SECRET_KEY"]
# real key for newhonorablelecturer SECRET_KEY = '49cp4$8uu23u1=81i@qil*ab18s$bw97x1!l&fb@h+v(583jtt'

SECRET_KEY = env('SECRET_KEY')
config ={
#   "SECRET_KEY" : "03m64d61xpfh=jp9sdonalpx@*8@g-)z4)ajl3z*(s^_)s_euu",
#   "BASE_URL" :  "http://192.168.8.111/WebResult.WebApi",
#   "BASE_URLFull_Time" :  "http://192.168.8.111/WebResult.WebApi",
#   "BASE_URLDPP" :  "http://192.168.20.8:50656",
#   "BASE_URLCEC" :  "http://192.168.20.8:50657",
    "BASE_URL" :env('BASE_URL'),
    "BASE_URLFull_Time" :env('BASE_URLFull_Time'),#  "http://192.168.8.111/WebResult.WebApi",
    "BASE_URLDPP" : env('BASE_URLDPP'),# "http://192.168.20.8:50656",
    "BASE_URLCEC" : env('BASE_URLCEC'),# "http://192.168.20.8:50657",
#   "CIPHER_PASS": "Deji1@Poly",
#   "WORKSHEET_PASS":"Deji1@Poly",
#   "WORKBOOKHASHED_PASSWORD":"Akoms1@Poly",
#   "DBNAME": "HonLecturerDB",
#   "DBUSER": "postgres",
#   "DBPASSWORD": "Ranti",
#   "DBPASSWORDcidm": "Kenny1",
#   "DBHOST": "127.0.0.1",
#   "DBHOSTcidn": "192.168.20.62",
#   "DBPORT": "5432",
#   "EMAIL_HOST_USER" : "Akomspatrick@gmail.com",
#   "EMAIL_HOST_PASSWORD" :"Deji75@Akoms"

}


CIPHER=config
